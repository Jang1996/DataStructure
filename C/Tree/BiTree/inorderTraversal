递归
 vector<int> inorderTraversal(TreeNode *root) {
       
        vector<int> v;
        if(root==NULL) return v;
        inorderTraversal(root,v);
        return v;
        
    }
    void inorderTraversal(TreeNode *root ,vector<int> &v){
        if(root==NULL) return;
        inorderTraversal(root->left,v);
        v.push_back(root->val);
        inorderTraversal(root->right,v);
    }
    非递归
     vector<int> inorderTraversal(TreeNode *root) {
      
        vector<int> v;
        if(root==NULL) return v;
       stack<TreeNode *> s;
          TreeNode *p=root;
       while(p||!s.empty()){
         while(p)
         {s.push(p);p=p->left;}
       TreeNode *q=s.top();
       s.pop();
       v.push_back(q->val);
       p=q->right;
       }
       return v;
        
    }
